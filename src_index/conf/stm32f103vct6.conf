#take a look on 'HY-MiniSTM32V 2011.1.18/GPIO/USER/main.c'
#config file bleeding edge version
[base]
includes = stm32f10x.h stdbool.h
header = /* This code is generated by ladder2c */
defines = #define SYS_CLK 24000000 , #define DELAY_TIM_FREQUENCY 1000000
#solve dynamic hazard issue and overloading
functions =  void empty();
#snipped from http://www.elektroda.pl/rtvforum/topic1961226.html
delay = void delay_init(){RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);TIM_TimeBaseStructure.TIM_ClockDivision = 0;TIM_TimeBaseStructure.TIM_CounterMode=TIM_CounterMode_Up;TIM_TimeBaseStructure.TIM_Period = UINT16_MAX;TIM_TimeBaseStructure.TIM_Prescaler=(SYS_CLK/DELAY_TIM_FREQUENCY) - 1;TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);TIM_Cmd(TIM4, ENABLE);}void delay_us( uint16_t us ){TIM4->CNT = 0;while((uint16_t)(TIM4->CNT) <= us);}void delay_ms( uint16_t ms ){int i; for (i=0; i < ms; i++){delay_us(1000);}}
#bool checkCounter(int actual, int max, bool target) { return actual < max && target; }
[elements]
#connectors
x1_normal_false = some
X1 = some_x
x2 = some_x
x3 = some_x
x4 = some_x
x5 = some_x
x6 = some_x
x7 = some_x
a = some_x
b = some_x
c = some_x
R0 = r0 = true;
#coils
y1_type_set = GPIO_SetBit(somevalue)
Y0 = GPIO_GetBit(somevalue)
y2 = GPIO_GetBit(somevalue)


#counters
c0 = checkCounter(counter_C0, count_C0_to, counter_C0_target)
c1 = checkCounter(counter_C0, count_C1_to, counter_C1_target)
c2 = checkCounter(counter_C2, count_C2_to, counter_C2_target)


#registers
r1 = r1
